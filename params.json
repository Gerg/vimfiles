{"tagline":"The Vim Configuration.","body":"# The Vim Configuration.\r\n\r\n[See vimfiles's Stats on GitEgo](http://gitego.com/luan/vimfiles)\r\n\r\n## Installation\r\n\r\n1. `git clone http://github.com/luan/vimfiles.git` in your home folder.\r\n2. `mv vimfiles .vim`\r\n3. `cd .vim`\r\n4. `rake bootstrap` Runs everything you need to get started\r\n5. Install [Vundle](https://github.com/gmarik/vundle) with `git clone http://github.com/gmarik/vundle.git bundle/vundle`\r\n6. Run Vim and type `:BundleInstall` to install the plugins with Vundle.\r\n7. Enjoy enhanced productivity, increased levitation, reduced watermelon-related accidents, and startling sex appeal.\r\n\r\n## Tasks\r\n\r\n```\r\nrake bootstrap              # Runs everything you need to get started\r\nrake plugins:compile        # Compile stuff, like Command-T.\r\nrake plugins:update_readme  # Update the list of plugins in README.md\r\nrake vim:create_locals      # Create local configs\r\nrake vim:link               # Create symlinks\r\n```\r\n\r\n## Screenshots\r\n\r\n**MacVim** / **Windows gVim**\r\n\r\n[![MacVim](https://github.com/luan/vimfiles/raw/master/screenshots/mvim_small.png)](https://github.com/luan/vimfiles/raw/master/screenshots/mvim.png)\r\n[![Terminal Vim](https://github.com/luan/vimfiles/raw/master/screenshots/vim_small.png)](https://github.com/luan/vimfiles/raw/master/screenshots/vim.png)\r\n\r\n## Notes\r\n\r\nBe sure to always edit the vimrc using `,vi`, which opens the vimrc in the .vim folder. Vim has a nasty habit of overriding symlinks.\r\nThere are two options about the test runner:\r\n\r\n```\r\n\" will check for gemfile and run bundle exec if present\r\n\" bundle exec slows down startup so if you can avoid it good\r\n\" 0 or 1, defaults 0\r\nlet g:check_gemfile=1\r\n\r\n\" will use test server even when on terminal vim\r\n\" default behavior is only when on GUI vim (e.g. mVim or gVim)\r\n\" 0 or 1, defaults 0\r\nlet g:always_use_test_server=1\r\n```\r\n\r\nOn ~/.vimrc.local.before you can add this line `let g:hardcore_mode=0` to re-enable the arrow keys if you like them.\r\n\r\n## Plugin Installation / Requirements\r\n\r\nI may make this more verbose later, but for now, here's a list of plugins that require further installation:\r\n\r\n * [Command-T](https://github.com/wincent/Command-T) Needs compilation.\r\n * [Fugitive](https://github.com/tpope/vim-fugitive) Requires Git to be installed.\r\n * [ack.vim](https://github.com/mileszs/ack.vim) Requires [ack](http://betterthangrep.com/) to be installed.\r\n\r\n## Plugin List\r\n\r\n_Note: Auto generated by `rake plugins:update_readme`_\r\n\r\n\r\n * [vundle](https://github.com/gmarik/vundle) - Vundle, the plug-in manager for Vim\r\n * [Command-T](https://github.com/wincent/Command-T) - Mirror of the official Command-T repository at git.wincent.com\r\n * [vim-easymotion](https://github.com/Lokaltog/vim-easymotion) - Vim motions on speed!\r\n * [nerdtree](https://github.com/scrooloose/nerdtree) - A tree explorer plugin for vim.\r\n * [ctrlp.vim](https://github.com/kien/ctrlp.vim) - Fuzzy file, buffer, mru, tag, etc finder.\r\n * [vim-powerline](https://github.com/Lokaltog/vim-powerline) - The ultimate vim statusline utility.\r\n * [vim-tomorrow-theme](https://github.com/chriskempson/vim-tomorrow-theme) - Tomorrow Theme for Vim\r\n * [vim-colors-solarized](https://github.com/altercation/vim-colors-solarized) - precision colorscheme for the vim text editor\r\n * [vim-commentary](https://github.com/tpope/vim-commentary) - commentary.vim: comment stuff out\r\n * [vim-surround](https://github.com/tpope/vim-surround) - surround.vim: quoting/parenthesizing made simple\r\n * [vim-fugitive](https://github.com/tpope/vim-fugitive) - fugitive.vim: a Git wrapper so awesome, it should be illegal\r\n * [vim-abolish](https://github.com/tpope/vim-abolish) - abolish.vim: easily search for, substitute, and abbreviate multiple variants of a word\r\n * [vim-eunuch](https://github.com/tpope/vim-eunuch) - eunuch.vim: helpers for UNIX\r\n * [tabular](https://github.com/godlygeek/tabular) - Vim script for text filtering and alignment\r\n * [ack.vim](https://github.com/mileszs/ack.vim) - Vim plugin for the Perl module / CLI script 'ack'\r\n * [vim-togglelist](https://github.com/milkypostman/vim-togglelist) - Functions to toggle the [Location List] and the [Quickfix List] windows.\r\n * [vim-endwise](https://github.com/tpope/vim-endwise) - endwise.vim: wisely add \"end\" in ruby, endfunction/endif/more in vim script, etc\r\n * [supertab](https://github.com/ervandew/supertab) - Perform all your vim insert mode completions with Tab\r\n * [MatchTag](https://github.com/gregsexton/MatchTag) - Vim's MatchParen for HTML tags\r\n * [neocomplcache](https://github.com/Shougo/neocomplcache) - Ultimate auto-completion system for Vim.\r\n * [vim-repeat](https://github.com/tpope/vim-repeat) - repeat.vim: enable repeating supported plugin maps with \".\"\r\n * [vim-matchit](https://github.com/Spaceghost/vim-matchit) - A simple mirror of vim-matchit from @mirell\r\n * [vim-textobj-user](https://github.com/kana/vim-textobj-user) - Vim plugin: Support for user-defined text objects\r\n * [vim-textobj-rubyblock](https://github.com/nelstrom/vim-textobj-rubyblock) - A custom text object for selecting ruby blocks.\r\n * [snipmate-snippets](https://github.com/honza/snipmate-snippets) - vim-snipmate default snippets\r\n * [vim-snipmate](https://github.com/garbas/vim-snipmate) - snipMate.vim aims to be a concise vim script that implements some of TextMate's snippets features in Vim. \r\n * [vim-ruby](https://github.com/vim-ruby/vim-ruby) - Vim/Ruby Configuration Files\r\n * [vim-rails](https://github.com/tpope/vim-rails) - rails.vim: Ruby on Rails power tools\r\n * [vim-rake](https://github.com/tpope/vim-rake) - rake.vim: it's like rails.vim without the rails\r\n * [vim-rvm](https://github.com/tpope/vim-rvm) - rvm.vim: Switch Ruby versions from inside Vim\r\n * [vim-ruby-refactoring](https://github.com/ecomba/vim-ruby-refactoring) - Refactoring tool for Ruby in vim!\r\n * [vim-haml](https://github.com/tpope/vim-haml) - Vim runtime files for Haml, Sass, and SCSS\r\n * [vim-handlebars](https://github.com/nono/vim-handlebars) - Vim plugin for Handlebars\r\n * [html5.vim](https://github.com/othree/html5.vim) - HTML5 omnicomplete and syntax\r\n * [indenthtml.vim](https://github.com/vim-scripts/indenthtml.vim) - alternative html indent script\r\n * [vim-javascript](https://github.com/pangloss/vim-javascript) - Vastly improved vim's javascript indentation.\r\n * [jacinto.vim](https://github.com/alfredodeza/jacinto.vim) - Format and validate JSON files\r\n * [vim-coffee-script](https://github.com/kchmck/vim-coffee-script) - CoffeeScript support for vim\r\n * [jasmine.vim](https://github.com/luan/jasmine.vim) - Jasmine Plugin for Vim\r\n * [vim-css3-syntax](https://github.com/mutewinter/vim-css3-syntax) - Add CSS3 syntax support to vim's built-in `syntax/css.vim`.\r\n * [vim-markdown](https://github.com/hallison/vim-markdown) - Markdown syntax highlight for Vim editor with snippets support\r\n * [L9](https://github.com/vim-scripts/L9) - Vim-script library\r\n * [vim-addon-mw-utils](https://github.com/MarcWeber/vim-addon-mw-utils) - vim: interpret a file by function and cache file automatically\r\n * [tlib_vim](https://github.com/tomtom/tlib_vim) - Some utility functions for VIM\r\n\r\n_That's 44 plugins, holy crap._\r\n","google":"UA-28068804-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Vimfiles"}